@model RamenOkiDoki.ViewModels.FoodItemsViewModel
@{
    ViewData["Title"] = "Take Out";
}



<div class="combo-page row">

    <div class="left-menu-sidebar">

        @{

            if (Model.FoodItems == null)
            {
                return;
            }


            foreach (var category in Model.FoodCategories)
            {

                <a class="admin-nav-link" asp-area="" asp-controller="Menu" asp-action="TakeOutMenu" asp-route-category="@category">@category</a>


            }
        }

    </div>

    <div class="right-side-content">
        <div>
            @{
                if (Model.FoodItems == null)
                {
                    return;
                }

                string categoryName = "";

                foreach (var menuItem in Model.FoodItems)
                {
                    if (categoryName != menuItem.categoryName)
                    {
                        <h2 class="categoryName">@menuItem.categoryName</h2>

                        categoryName = menuItem.categoryName;
                    }
                    <p>
                        <span class="menuItem">@menuItem.dishName </span>
                        <span class="menuItem">@menuItem.koreanName </span>
                        <span class="menuPrice">$  @menuItem.price</span>

                        <a asp-area="" asp-controller="Cart" asp-action="AddToCart" asp-route-itemIdToAdd="@menuItem.id" style="font-weight: bold; margin-left: 10px">
                            <i class="fas fa-plus-square"></i> ADD
                        </a>
                    </p>
                    <p class="menuDescription">@menuItem.description</p>
                }


            }

        </div>

    </div>
    <div class="food-order-cart">

        @await Component.InvokeAsync("FoodOrderCart")

    </div>
</div>